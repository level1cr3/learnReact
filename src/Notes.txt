React:

# What is React ? How it helps us create better application ?
> React is js library for building dynamic and interactive user interfaces. It was created in facebook in 2011. 
and is currently the most used js library for frontend development.

# why was react created ?
> we know when a webpage is loaded in the browser. The browser takes the html code and creates a tree like structure called. 
Document object model (DOM). This allows us to use js and change the page content in response to user action.

ex: we can use js to hide and element when an button is clicked.

As our application grows working with DOM can get complex and challenging to manage. 

This is where react comes in.

> With react we don't have to worry about querying and updating the dom element. Instead we describe webpage using small reuseable components.
And react will take care of efficiently creating and updating DOM element.

> components help us write reuseable, modular and better organized code.

> we can build components individually. components being for ex: search bar, navbar, main gird, card in that grid.
  and combine them to build the page.
  
> essentially a react application is tree of components. With App being the root. bringing everything together.  


# There are 2 ways to create react app.
1> create react app (CRA) official way.
2> Vite (is more popular because it is much faster then CRA. and gives us smaller bundle sizes.)

> to create new app using vite.
 > npm create vite@latest
 > npm create vite@4.1.0
 
 
>  extension of ts file should be either
	.ts : for plain ts file
	.tsx : tsx for react components.
	
# There are 2 ways to create react components	
	> class
	> Function
	
	# These days Function based components have become more popular. Because they are concise and easier to write.
	
	> for class components watch older course.
	
	> Function based components are the recommended approach for the new projects.

===================================================================================================

# How React works ?	
> currently we have a component tree. with 'App' being the root and 'Message' being the child node.
	
	App
	 |
	 |
  Message 

  When our application starts react takes this component tree. and builds the js data-structure called 'virtual dom'

  div
   |
   |
   h1

 This 'virtual DOM'  is different from the actual DOM in the browser. It's light weight in memory representation of our 
 component tree. where each node represents component and it's properties.
 When the state or the data of the component changes. React updates the corresponding node in the virtual dom. To 
 reflect the new state.
 Then it compares the current version of virtual dom with the previous version. 
 To identify the nodes that should be updated. It will then update those nodes in the actual DOM.

 Technically updating the DOM is not done by the react itself. It's done by companion library called 'React-Dom'.

 
============================================================================================================

> React is js library for creating User interfaces.

> In contrast to react. we have other tools like angular and vue which are frameworks.

# what is the difference between library and framework.

library : A tool that provides the specific functionality.

framework : A set of tools and guidelines for building apps.

> React is just a library for building UI. 

> so we hardly use only react to build modern application. We often need additional tools for concerns such as:

> Routing. : allowing user to go from one page to anther.
> HTTP : making http calls.
> managing app state.
> Internationalization
> Form validation
> animations 
> so on ...

> React doesn't have opinion about additional tools that we should use for these concerns. So we can pick the right tool 
for the job.

